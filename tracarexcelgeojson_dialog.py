# -*- coding: utf-8 -*-
"""
/***************************************************************************
 traccarGeoJSONDialog
                                 A QGIS plugin
 Permet de convertir des rapport Excel de Traccar vers GeoJSON
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2025-10-15
        git sha              : $Format:%H$
        copyright            : (C) 2025 by Martin Couture
        email                : martin.cot.couture@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os

from PyQt5 import QtCore
from PyQt5.QtWidgets import QDialogButtonBox
from qgis.PyQt import uic
from qgis.PyQt import QtWidgets
from qgis.PyQt.QtWidgets import QFileDialog

from .excelHelper import *
from .geoJSONHelper import *

FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'tracarexcelgeojson_dialog_base.ui'))

class MySgnalEmitter(QtCore.QObject):
    signal = QtCore.pyqtSignal(str)

class traccarGeoJSONDialog(QtWidgets.QDialog, FORM_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        self.signal_emitter = MySgnalEmitter()  # Instance du signal
        self.signal_emitter.signal.connect(self.ajoutLog)  # Lien du signal lors de l'émission
        super(traccarGeoJSONDialog, self).__init__(parent)
        self.setupUi(self)
        self.btnSource.clicked.connect(self.ouvertureFichierSource)
        self.btnDestination.clicked.connect(self.ouvertureFichierDestination)
        #Boutons
        button = self.button_box.button(QDialogButtonBox.Apply)
        button.clicked.connect(self.accept)

    def ouvertureFichierSource(self):
        fichier = QFileDialog.getOpenFileName(self, "Fichier Excel source", "c:\\temp",
                                              "Fichier Excel (*.xlsx)")
        if fichier:
            self.lblSource.setText(fichier[0])

    def ouvertureFichierDestination(self):
        fichier = QFileDialog.getSaveFileName(self, "Sauvegarde GEOJSON", "c:\\temp\\position.geojson",
                                                        "Fichier geojson (*.geojson)")
        if fichier:
            self.lblDestination.setText(fichier[0])

    def accept(self):
        eh = ExcelHelper(self.lblSource.text(),self.signal_emitter )
        gh = GeoJSONHelper(eh.extractionPointFeuillet(), self.signal_emitter)
        gh.creationFichierGeoJSON(self.lblDestination.text())
        self.ajoutLog("TERMINÉ")

    def ajoutLog(self, msg):
        self.pTxtEditLog.append(msg)
